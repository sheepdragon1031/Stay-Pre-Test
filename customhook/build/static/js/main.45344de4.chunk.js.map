{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","initialValues","validation","onSubmit","useState","values","setValues","errors","setErrors","bypass","setBypass","useEffect","onSubmits","Object","keys","length","handleChange","event","target","type","name","value","rememberMe","checked","handleSubmit","useForm","account","password","console","table","inputVal","setInputVal","handleButton","func","delay","timeout","next","apply","arguments","clearTimeout","setTimeout","debounceFunc","e","preventDefault","log","id","onChange","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAoFeA,MApDf,WAAgB,IAAD,EA5BC,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAAc,EAE7BC,mBAASH,GAFoB,mBAElDI,EAFkD,KAE1CC,EAF0C,OAG7BF,mBAAS,IAHoB,mBAGlDG,EAHkD,KAG1CC,EAH0C,OAI7BJ,oBAAS,GAJoB,mBAIlDK,EAJkD,KAI1CC,EAJ0C,KA0BzD,OArBAC,qBAAU,WAA2B,IAA1BC,EAAyB,uDAAbT,EACc,IAA/BU,OAAOC,KAAKP,GAAQQ,QAAgBN,GACtCG,EAAUP,KAEX,CAAEE,EAAQE,EAAQJ,EAAQF,IAiBtB,CAACa,aAfa,SAAAC,GACnBP,GAAU,GACe,SAAtBO,EAAMC,OAAOC,KACdb,GAAU,SAAAD,GAAM,kCAAQA,GAAR,kBAAiBY,EAAMC,OAAOE,KAAOH,EAAMC,OAAOG,WAEtC,aAAtBJ,EAAMC,OAAOC,MACnBb,GAAU,SAAAD,GAAM,kCAAQA,GAAR,IAAiBiB,WAAaL,EAAMC,OAAOK,cASzCC,aAJD,SAAAP,GACnBT,EAAUN,EAAWG,IACrBK,GAAU,IAEwBL,SAAQE,UAGWkB,CAAQ,CAC3DxB,cAAe,CAAEyB,QAAS,GAAIC,SAAU,GAAIL,YAAY,GACxDpB,WAAY,SAACG,GACX,IAAME,EAAS,GAMb,OALGF,EAAOqB,QAGFrB,EAAOsB,WACfpB,EAAOoB,SAAW,kCAHlBpB,EAAOmB,QAAU,iCAIVnB,GAEXJ,SAAU,SAACE,GAAD,OAAYuB,QAAQC,MAAMxB,MAXhCW,EADK,EACLA,aAAcQ,EADT,EACSA,aAAcnB,EADvB,EACuBA,OAAQE,EAD/B,EAC+BA,OAD/B,EAemBH,mBAAS,IAf5B,mBAeN0B,EAfM,KAeIC,EAfJ,KAyBPC,EATe,SAACC,EAAMC,GAC1B,IAAIC,EAAU,KACd,OAAO,WAAY,IAAD,mBACVC,EAAO,kBAAMH,EAAKI,MAAM,EAAMC,IACpCC,aAAaJ,GACbA,EAAUK,WAAWJ,EAAMF,IAIVO,EAAa,SAACC,GACjCA,EAAEC,iBACFf,QAAQgB,IAAR,UAAeF,EAAExB,OAAO2B,GAAxB,qBACAd,EAAY,GAAD,OAAIW,EAAExB,OAAO2B,GAAb,uBACV,KAGH,OAAQ,qCACR,uBAAOzB,KAAK,UAAU0B,SAAU9B,EAAcK,MAAOhB,EAAOqB,QAASqB,YAAY,YAChFxC,EAAOmB,SAAY,8BAAMnB,EAAOmB,UACjC,uBAAON,KAAK,WAAW0B,SAAU9B,EAAcK,MAAOhB,EAAOsB,SAAUoB,YAAY,aAClFxC,EAAOoB,UAAa,8BAAMpB,EAAOoB,WAClC,kCACE,uBAAOR,KAAK,WAAWC,KAAK,aAAa0B,SAAU9B,EAAcO,QAASlB,EAAOiB,aADnF,iBAIA,wBAAQ0B,QAASxB,EAAjB,mBAEA,uBACA,gCACE,iDACA,wBAAQqB,GAAG,MAAMG,QAAS,SAAAN,GAAC,OAAIV,EAAaU,IAA5C,sBACA,8BAAMZ,WCnEKmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.45344de4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport './App.css';\n\nconst useForm = ({initialValues, validation, onSubmit}) => {\n  \n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [bypass, setBypass] = useState(false);\n  useEffect((onSubmits = onSubmit) => {\n    if (Object.keys(errors).length === 0 && bypass) {\n      onSubmits(values)\n    }\n  }, [ errors, bypass, values, onSubmit]);\n\n  const handleChange = event => {\n    setBypass(false)\n    if(event.target.type === \"text\"){\n      setValues(values=> ({...values, [event.target.name]: event.target.value}))\n    }\n    else if(event.target.type === \"checkbox\" ){\n      setValues(values=> ({...values,  rememberMe : event.target.checked}))\n    }\n    \n  }\n  \n  const handleSubmit = event => {\n    setErrors(validation(values))\n    setBypass(true)\n  }\n  return {handleChange, handleSubmit, values, errors}\n}\nfunction App() {\n  const { handleChange, handleSubmit, values, errors } = useForm({\n      initialValues: { account: \"\", password: \"\", rememberMe: false },\n      validation: (values) => {\n        const errors = {}\n        if (!values.account) {\n          errors.account = \"請輸入帳號\"\n        } \n        else if (!values.password) {\n          errors.password = \"請輸入密碼\"\n        } return errors\n      },\n      onSubmit: (values) => console.table(values),\n    })\n\n  const [inputVal, setInputVal] = useState(\"\");\n  const debounceFunc = (func, delay) => {\n    let timeout = null \n    return function() {\n      const next = () => func.apply(this, arguments)\n      clearTimeout(timeout)\n      timeout = setTimeout(next, delay)\n    }\n  }\n  \n  const handleButton = debounceFunc((e) => {\n    e.preventDefault();\n    console.log(`${e.target.id} Debounce 1000ms`);\n    setInputVal(`${e.target.id} Debounce 1000ms`)\n  }, 1000)\n  \n  \n  return (<>\n  <input name=\"account\" onChange={handleChange} value={values.account} placeholder=\"Account\" />\n  {errors.account && (<div>{errors.account}</div>)}\n  <input name=\"password\" onChange={handleChange} value={values.password} placeholder=\"password\" />\n  {errors.password && (<div>{errors.password}</div>)}\n  <label>\n    <input type=\"checkbox\" name=\"rememberMe\" onChange={handleChange} checked={values.rememberMe} />\n    Remember Me\n  </label>\n  <button onClick={handleSubmit}>Login</button>\n\n  <hr/>\n  <div>\n    <h3>Debounce 1000ms</h3>\n    <button id=\"btn\" onClick={e => handleButton(e)}>Debounce</button>\n    <div>{inputVal}</div>\n  </div>\n  </>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}